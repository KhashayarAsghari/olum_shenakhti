{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://192.168.59.20:8686/library/api",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "publishers_management",
      "description": "Operations related to publishers"
    },
    {
      "name": "category_management",
      "description": "APIs for managing categories. This includes operations to create, update, and retrieve categories."
    },
    {
      "name": "Author_management",
      "description": "Operations related to authors"
    },
    {
      "name": "book_management",
      "description": "The book API provides endpoints for managing books. This includes creating, updating, deleting, and retrieving books."
    }
  ],
  "paths": {
    "/v1/manager/{page}/publishers/{publisherId}": {
      "get": {
        "tags": ["publishers_management"],
        "summary": "Get a publisher by ID",
        "description": "This endpoint is used to retrieve a publisher by its ID.",
        "operationId": "getPublisher_1",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "put": {
        "tags": ["publishers_management"],
        "summary": "Update an existing publisher",
        "description": "This endpoint is used to update an existing publisher. The request body must contain the updated information for the publisher.",
        "operationId": "updatePublisher",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/v1/manager/{page}/books/{bookId}": {
      "get": {
        "tags": ["book_management"],
        "summary": "Retrieve book",
        "description": "Get a specific book by its ID.",
        "operationId": "getBook_1",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BookResponseDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "put": {
        "tags": ["book_management"],
        "summary": "Update an existing book",
        "description": "Updates an existing book in the database.",
        "operationId": "updateBook",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/v1/manager/{page}/authors/{authorId}": {
      "get": {
        "tags": ["Author_management"],
        "operationId": "getAuthor",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "put": {
        "tags": ["Author_management"],
        "summary": "Update an existing author",
        "description": "This endpoint is used to update an existing author. The request body must contain the updated information for the author.",
        "operationId": "updateAuthor",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/v1/manager/{page}/publishers": {
      "get": {
        "tags": ["publishers_management"],
        "summary": "Get all publishers",
        "description": "This endpoint is used to retrieve a list of all publishers. An optional 'isEnable' parameter can be provided to filter publishers by their 'isEnable' status.",
        "operationId": "getPublishers_1",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchDTO",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PublisherSearchDTO"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagePublisherDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "post": {
        "tags": ["publishers_management"],
        "summary": "Create a new publisher",
        "description": "This endpoint is used to create a new publisher. The request body must contain all necessary information for the publisher.",
        "operationId": "setPublisher",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublisherDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/v1/manager/{page}/categories": {
      "post": {
        "tags": ["category_management"],
        "operationId": "setCategories",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/manager/{page}/books": {
      "get": {
        "tags": ["book_management"],
        "summary": "Retrieve books",
        "description": "Retrieves a list of books based on the provided search criteria.",
        "operationId": "getAllBooks",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchDTO",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BookSearchDTO"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageBookResponseDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "post": {
        "tags": ["book_management"],
        "summary": "set a bookResponseDTOew book",
        "operationId": "setBook",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/v1/manager/{page}/authors": {
      "get": {
        "tags": ["Author_management"],
        "operationId": "getAuthors",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchDTO",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/AuthorSearchDTO"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageAuthorDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      },
      "post": {
        "tags": ["Author_management"],
        "summary": "Create a new author",
        "description": "This endpoint is used to create a new author. The request body must contain all necessary information for the author.",
        "operationId": "setAuthor",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/v1/manager/{page}/categories/{categoryId}/enable": {
      "patch": {
        "tags": ["category_management"],
        "operationId": "enableOrDisable",
        "parameters": [
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "enable",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/scope/{scopeId}/categories": {
      "get": {
        "tags": ["category_management"],
        "operationId": "getCategories",
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/scope/{scopeId}/books": {
      "get": {
        "tags": ["book_management"],
        "summary": "Retrieve books",
        "description": "Retrieves a list of books based on the provided search criteria.",
        "operationId": "getBooks",
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "searchDTO",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BookSearchDTO"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageBookResponseDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/v1/scope/{scopeId}/books/{bookId}": {
      "get": {
        "tags": ["book_management"],
        "summary": "Retrieve book",
        "description": "Get a specific book by its ID.",
        "operationId": "getBook",
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BookResponseDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/v1/publishers": {
      "get": {
        "tags": ["publishers_management"],
        "summary": "Get all publishers",
        "description": "This endpoint is used to retrieve a list of all publishers. An optional 'isEnable' parameter can be provided to filter publishers by their 'isEnable' status.",
        "operationId": "getPublishers",
        "parameters": [
          {
            "name": "searchDTO",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PublisherSearchDTO"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PagePublisherDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/v1/publishers/{publisherId}": {
      "get": {
        "tags": ["publishers_management"],
        "summary": "Get a publisher by ID",
        "description": "This endpoint is used to retrieve a publisher by its ID.",
        "operationId": "getPublisher",
        "parameters": [
          {
            "name": "publisherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PublisherDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/v1/categories": {
      "get": {
        "tags": ["category_management"],
        "operationId": "getCategories_1",
        "parameters": [
          {
            "name": "isEnable",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/authors": {
      "get": {
        "tags": ["Author_management"],
        "operationId": "getAuthors_1",
        "parameters": [
          {
            "name": "searchDTO",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/AuthorSearchDTO"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageAuthorDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    },
    "/v1/authors/{authorId}": {
      "get": {
        "tags": ["Author_management"],
        "operationId": "getAuthor_1",
        "parameters": [
          {
            "name": "authorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorDTO"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Authentication": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "PublisherDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "enable": {
            "type": "boolean"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ResponseDTO": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "BookRequestDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "coverImageUUID": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "publicationYear": {
            "type": "integer",
            "format": "int32"
          },
          "authorIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "publisherId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "scopeId": {
            "type": "integer",
            "format": "int32"
          },
          "fileUUID": {
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "publish": {
            "type": "boolean"
          },
          "public": {
            "type": "boolean"
          }
        }
      },
      "AuthorDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["WRITER", "TRANSPORTER"]
          },
          "enable": {
            "type": "boolean"
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "CategoryDTO": {
        "required": ["scopeId", "scopeTitle"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "scopeId": {
            "type": "integer",
            "format": "int32"
          },
          "scopeTitle": {
            "type": "string"
          },
          "parentId": {
            "type": "integer",
            "format": "int64"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryDTO"
            }
          },
          "createAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updateAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "enable": {
            "type": "boolean"
          }
        }
      },
      "BookSearchDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "publish": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "authorIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "publisherIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "scopeId": {
            "type": "integer",
            "format": "int32"
          },
          "isPublic": {
            "type": "boolean"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BookResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "coverImage": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "publicationYear": {
            "type": "integer",
            "format": "int32"
          },
          "authors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthorDTO"
            }
          },
          "publisher": {
            "$ref": "#/components/schemas/PublisherDTO"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryDTO"
          },
          "feedbackStats": {
            "$ref": "#/components/schemas/FeedbackStatsDTO"
          },
          "publish": {
            "type": "boolean"
          },
          "createAt": {
            "type": "string",
            "format": "date-time"
          },
          "updateAt": {
            "type": "string",
            "format": "date-time"
          },
          "public": {
            "type": "boolean"
          }
        }
      },
      "CommentStats": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "FeedbackStatsDTO": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "integer",
            "format": "int64"
          },
          "comment": {
            "$ref": "#/components/schemas/CommentStats"
          },
          "reaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReactionResponseDTO"
            }
          }
        }
      },
      "PageBookResponseDTO": {
        "type": "object",
        "required": ["content"],
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookResponseDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "paged": {
            "type": "boolean"
          },
          "unpaged": {
            "type": "boolean"
          }
        }
      },
      "ReactionResponseDTO": {
        "type": "object",
        "properties": {
          "reactionTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "reactionType": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "userReacted": {
            "type": "boolean"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          }
        }
      },
      "PublisherSearchDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "enable": {
            "type": "boolean"
          }
        }
      },
      "PagePublisherDTO": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublisherDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "AuthorSearchDTO": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["WRITER", "TRANSPORTER"]
          },
          "enable": {
            "type": "boolean"
          }
        }
      },
      "PageAuthorDTO": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthorDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer Authentication": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
